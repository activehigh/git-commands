#!/bin/bash

# Determine the default branch from the remote (e.g., origin)
DEFAULT=$(git remote show origin | awk '/HEAD branch/ {print $NF}')
MESSAGE=$1

echo "Default branch is: ${DEFAULT}"
echo "Commit message is: ${MESSAGE}"

# Use the current date as the commit message if none is provided
if [ -z "${MESSAGE}" ]; then
  MESSAGE="$(date)"
fi

# Stage all changes and create a commit
git add . && git commit -m "${MESSAGE}"

# Get the current branch name
BRANCH=$(git branch --show-current)

# Ensure the default branch is up-to-date
git checkout "${DEFAULT}"
git pull --prune

# Switch back to the current branch and pull the latest changes
git checkout "${BRANCH}"
git pull

# Squash all commits on the current branch into a single commit
git reset --soft "${DEFAULT}"
git add . && git commit -m "${MESSAGE}"

# Force push the squashed commit to the remote branch
git push -f
